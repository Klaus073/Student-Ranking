name: Staging CI/CD

on:
  push:
    branches: [staging]
  pull_request:
    branches: [staging]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linting
      run: npm run lint --if-present
    
    - name: Run tests
      run: npm test --if-present
    
    - name: Build application
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build for production
      run: npm run build
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.STAGING_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY: ${{ secrets.STAGING_SUPABASE_ANON_KEY }}
    
    - name: Deploy to EC2
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        port: 22
        script: |
          # Navigate to app directory
          cd /var/www/student-ranking-staging || exit 1
          
          # Pull latest code
          git fetch origin
          git reset --hard origin/staging
          
          # Install dependencies
          npm ci --production
          
          # Build application
          npm run build
          
          # Create/update environment file
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.STAGING_SUPABASE_URL }}" > .env.production
          echo "NEXT_PUBLIC_SUPABASE_PUBLISHABLE_OR_ANON_KEY=${{ secrets.STAGING_SUPABASE_ANON_KEY }}" >> .env.production
          echo "NODE_ENV=production" >> .env.production
          echo "PORT=3000" >> .env.production
          
          # Restart application
          pm2 restart student-ranking-staging || pm2 start npm --name "student-ranking-staging" -- start
          
          # Wait and check if app is running
          sleep 5
          if ! curl -f http://localhost:3000 > /dev/null 2>&1; then
            echo "❌ Application failed to start"
            pm2 logs student-ranking-staging --lines 20
            exit 1
          fi
          
          echo "✅ Deployment successful!"