name: Deploy to Staging with Docker

on:
  push:
    branches: [ staging ]

env:
  IMAGE_NAME: 'ranking-app'
  CONTAINER_NAME: 'ranking-app'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t ${{ env.IMAGE_NAME }}:latest .
        docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:latest
        docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Push to Registry
      run: |
        docker push ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:latest
        docker push ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Deploy to Staging Server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.STAGING_EC2_HOST }}
        username: ${{ secrets.STAGING_EC2_USERNAME }}
        key: ${{ secrets.STAGING_EC2_PRIVATE_KEY }}
        port: ${{ secrets.STAGING_EC2_PORT || 22 }}
        script: |
          # Pull latest image
          docker pull ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:latest
          
          # Stop and remove old container
          docker stop ${{ env.CONTAINER_NAME }} 2>/dev/null || true
          docker rm ${{ env.CONTAINER_NAME }} 2>/dev/null || true
          
          # Run new container
          docker run -d \
            --name ${{ env.CONTAINER_NAME }} \
            -p 3000:3000 \
            --restart unless-stopped \
            ${{ secrets.REGISTRY_HOST }}/${{ env.IMAGE_NAME }}:latest
          
          # Clean up old images
          docker image prune -f